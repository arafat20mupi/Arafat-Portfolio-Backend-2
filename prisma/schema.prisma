// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  name       String
  email      String     @unique
  password   String?
  role       Role       @default(USER)
  phone      String?
  picture    String?
  status     UserStatus @default(ACTIVE)
  isVerified Boolean    @default(false)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  blogs      Blog[]
}

model Blog {
  id        Int      @id @default(autoincrement())
  title     String
  excerpt   String?
  content   String
  image     String?
  category  String?
  readTime  String?
  date      DateTime @default(now())
  tags      String[]
  likes     Int      @default(0)
  comments  Int      @default(0)
  shares    Int      @default(0)
  featured  Boolean  @default(false)
  published Boolean  @default(false)
  // Author relation
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  seoTitle       String?
  seoDescription String?
  seoKeywords    String[]
}

model Project {
  id              Int          @id @default(autoincrement())
  title           String
  description     String
  longDescription String?
  image           String?
  images          String[]
  tech            String[]
  category        String?
  github          String?
  live            String?
  duration        String?
  team            String?
  year            String?
  features        String[]
  challenges      Challenge[]
  testimonial     Testimonial? @relation(fields: [testimonialId], references: [id])
  testimonialId   Int?         @unique
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
}

model Challenge {
  id          Int     @id @default(autoincrement())
  title       String
  description String
  project     Project @relation(fields: [projectId], references: [id])
  projectId   Int
}

model Testimonial {
  id        Int      @id @default(autoincrement())
  name      String
  role      String
  company   String
  quote     String
  image     String?
  project   Project?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  SUPER_ADMIN
  ADMIN
  USER
}

enum UserStatus {
  ACTIVE
  INACTIVE
  BLOCK
}
